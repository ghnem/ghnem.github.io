{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Alpha Care Internal Documentation","text":"<p>This an exmaple of how you can expect my work to look like. This documentation has three main sections:</p> <ul> <li>Development Docs: where I explain how to run the project, and manage the development workflow.</li> <li>API Docs: Swagger API documentation.</li> <li>ERD: a simple ERD for an e-commerce app.</li> <li>Rationale: where I explain the design decisions and the reasoning behind them.</li> </ul>"},{"location":"development/","title":"Development","text":""},{"location":"development/#environment-setup","title":"Environment setup","text":""},{"location":"development/#devcontainer-recommended","title":"DevContainer (recommended)","text":"<p>Tip</p> <p>The project is built on top of a DevContainer, for minimal onboarding overhead and optimal productivity.</p> <p>The DevContainer has all the tools required for development; vscode extensions (sqlite, redis, pylance, redis, githhub actions, etc..), redis server, and CLIs for development and SDK generation. Also, it will pick up the right venv and activate it for you.</p> <ol> <li>Install Docker, Visual Studio Code, and the Remote - Containers extension.</li> <li>Open the repository in Visual Studio Code.</li> <li>The DevContainers extension will prompt you to reopen the project in a container. If it doesn't, in  the command palette <code>(ctrl + shift + p)</code>, search for <code>DevContainer: Reopen in Container</code>.</li> <li>The project will build the container and install all dependencies. This may take a few minutes.</li> </ol> <p>Profit!  You have a fully fledged development environment ready to go.</p>"},{"location":"development/#local-setup","title":"Local setup","text":"<p>If you prefer not to use DevContainer, you can set up the project locally.</p> <ol> <li>Install astral/uv.</li> <li>Run <code>uv sync</code> It will create a virtual environment with the version specified in the <code>.python-version</code> file.</li> <li>Activate the virtual environment <code>source .venv/bin/activate</code>.</li> <li>Run a redis server on <code>localhost:6379</code>.</li> <li>Copy <code>.env.example</code> to <code>.env</code> and fill in the required environment variables.</li> <li>(Optional) install graphviz for generating docs <code>sudo apt-get install graphviz libgraphviz-dev</code>.</li> <li>(Optional) install the OpenAPI Generator and Java if you want to generate SDKs.</li> </ol> <p>Warning</p> <p>All the commands from now on assume you have the virtual environment activated. Opening a new terminal in the DevContainer will activate the virtual environment for you (if doesn't reload run <code>reload window</code> from the command pallete).</p> <p>If don't want to activate the virtual environment, you can prefix the commands with <code>uv run</code>, e.g., <code>uv run poe dev</code>.    </p>"},{"location":"development/#task-runner","title":"Task runner","text":"<p>I am using poethepoet to ease the development workflow.  Tasks are defined in the <code>pyproject.toml</code> file.</p> <p>Info</p> <p>You don't need the <code>--no-ansi</code> flag if you are running the commands in a normal terminal.  The flag is used to remove the ANSI as the docs gets generated in CI.</p> <pre><code>$ poe --help --no-ansi\nPoe the Poet - A task runner that works well with poetry.\nversion 0.32.1\n\nUsage:\n  poe [global options] task [task arguments]\n\nGlobal options:\n  -h, --help            Show this help page and exit\n  --version             Print the version and exit\n  -v, --verbose         Increase command output (repeatable)\n  -q, --quiet           Decrease command output (repeatable)\n  -d, --dry-run         Print the task contents but don't actually run it\n  -C, --directory PATH  Specify where to find the pyproject.toml\n  -e, --executor EXECUTOR\n                        Override the default task executor\n  --ansi                Force enable ANSI output\n  --no-ansi             Force disable ANSI output\n\nConfigured tasks:\n  dev                   Run flask development server in debug mode\n  dev-docs              Run mkdocs development server\n  mypy                  Run mypy type checker\n  pyright               Run pyright type checker\n  lint                  Lint the projec with ruff\n  fmt                   Format the project with isort and black\n  sdk                   Generate the SDK from the swagger documentation\n    --lang              The language to generate the SDK for\n  create_admin          Create a new admin user\n    --first-name       \n    --last-name        \n    --email            \n    --phone            \n    --password         \n  swagger               Export the swagger documentation to a file\n    --path              The path to export the swagger documentation to [default: docs/swagger.json]\n  erd                   Export the ERD documentation to a file\n    --path              The path to export the ERD documentation to [default: docs/erd.md]\n</code></pre>"},{"location":"development/#running-flask-dev-server","title":"Running flask dev server","text":"<p>To run the server, you can use the <code>poe</code> task runner.</p> <p><pre><code>poe dev\n</code></pre> A typial output if you run this in a fresh DevContainer would look like this:</p> <code>poe dev</code> output <pre><code>Poe =&gt; flask --app app run --debug\nConfig(db_url='sqlite:///app.db',\n    redis_url='redis://localhost:6379',\n    instance_path=PosixPath('/workspaces/alfa-assesment'),\n    jwt_secret='super secret change in production',\n    jwt_location='headers',\n    server_name='localhost:5000',\n    application_root='',\n    preferred_url_scheme='http',\n    greetig='hello',\n    log_fire_enabled=False,\n    password_time_cost=2,\n    password_memory_cost=19456,\n    is_testing=False)\n* Serving Flask app 'app'\n* Debug mode: on\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\n* Running on http://127.0.0.1:5000\nPress CTRL+C to quit\n* Restarting with watchdog (inotify)\nConfig(db_url='sqlite:///app.db',\n    redis_url='redis://localhost:6379',\n    instance_path=PosixPath('/workspaces/alfa-assesment'),\n    jwt_secret='super secret change in production',\n    jwt_location='headers',\n    server_name='localhost:5000',\n    application_root='',\n    preferred_url_scheme='http',\n    greetig='hello',\n    log_fire_enabled=False,\n    password_time_cost=2,\n    password_memory_cost=19456,\n    is_testing=False)\n* Debugger is active!\n* Debugger PIN: 113-386-978\n</code></pre> <p>Now you can vist http://localhost:5000 to see the API documentation.</p>"},{"location":"development/#running-tests","title":"Running tests","text":"<pre><code>$ pytest --cov app\n</code></pre>"},{"location":"development/#quality-checks","title":"Quality checks","text":"<p>To ensure a high level of code quality, I am using mypy, ruff, black, and isort.</p> <p>Fixable formatting and linting issues can be fixed by passing the <code>--fix</code> flag to the <code>poe fmt</code> and <code>poe lint</code> commands.</p> <pre><code>poe fmt --fix\npoe lint --fix\n</code></pre>"},{"location":"development/#generating-sdks","title":"Generating SDKs","text":"<p>To consume the API in other languages, you can generate SDKs using the OpenAPI Generator. For example, to generate a Kotlin SDK, you can run the following command.</p> <pre><code>$ poe sdk --lang kotlin\n\u001b[37mPoe =&gt;\u001b[0m \u001b[94mopenapi-generator-cli generate -i docs/swagger.json -g kotlin -o sdk/kotlin\u001b[0m\n[main] INFO  o.o.codegen.DefaultGenerator - Generating with dryRun=false\n[main] INFO  o.o.c.ignore.CodegenIgnoreProcessor - Output directory (/home/runner/work/alfa/alfa/sdk/kotlin) does not exist, or is inaccessible. No file (.openapi-generator-ignore) will be evaluated.\n[main] INFO  o.o.codegen.DefaultGenerator - OpenAPI Generator: kotlin (client)\n[main] INFO  o.o.codegen.DefaultGenerator - Generator 'kotlin' is considered stable.\n[main] INFO  o.o.c.l.AbstractKotlinCodegen - Environment variable KOTLIN_POST_PROCESS_FILE not defined so the Kotlin code may not be properly formatted. To define it, try 'export KOTLIN_POST_PROCESS_FILE=\"/usr/local/bin/ktlint -F\"' (Linux/Mac)\n[main] INFO  o.o.c.l.AbstractKotlinCodegen - NOTE: To enable file post-processing, 'enablePostProcessFile' must be set to `true` (--enable-post-process-file for CLI).\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/models/LoginUserRequest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/models/LoginUserRequestTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/LoginUserRequest.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/models/RegisterUserError.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/models/RegisterUserErrorTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/RegisterUserError.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/models/RegisterUserRequest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/models/RegisterUserRequestTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/RegisterUserRequest.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/models/RegisterUserResponse.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/models/RegisterUserResponseTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/RegisterUserResponse.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/apis/ProtectedApi.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/apis/ProtectedApiTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/ProtectedApi.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/apis/PublicApi.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/apis/PublicApiTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/PublicApi.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/apis/UsersApi.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/test/kotlin/org/openapitools/client/apis/UsersApiTest.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/docs/UsersApi.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/README.md\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/build.gradle\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/settings.gradle\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/gradlew\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/gradlew.bat\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/gradle/wrapper/gradle-wrapper.properties\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/gradle/wrapper/gradle-wrapper.jar\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/ApiClient.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/ApiAbstractions.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/PartConfig.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/RequestConfig.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/RequestMethod.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/Serializer.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/ByteArrayAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/UUIDAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/LocalDateAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/LocalDateTimeAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/OffsetDateTimeAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/BigDecimalAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/BigIntegerAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/URIAdapter.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/Errors.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/ResponseExtensions.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/src/main/kotlin/org/openapitools/client/infrastructure/ApiResponse.kt\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/.openapi-generator-ignore\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/.openapi-generator/VERSION\n[main] INFO  o.o.codegen.TemplateManager - writing file /home/runner/work/alfa/alfa/sdk/kotlin/.openapi-generator/FILES\n################################################################################\n# Thanks for using OpenAPI Generator.                                          #\n# Please consider donation to help us maintain this project \ud83d\ude4f                 #\n# https://opencollective.com/openapi_generator/donate                          #\n#                                                                              #\n# This generator's contributed by Jim Schubert (https://github.com/jimschubert)#\n# Please support his work directly via https://patreon.com/jimschubert \ud83d\ude4f      #\n################################################################################\n</code></pre>"},{"location":"development/#cicd","title":"CI/CD","text":"<p>I am using GitHub Actions are used for CI/CD. The workflow is defined in <code>.github/workflows</code> directory.</p> <ul> <li> <p><code>ci.yml</code> has 3 jobs</p> <ul> <li><code>check</code>runs the tests, linting, formatting checks.</li> <li><code>integration</code> makes sure the swagger documentation is up to date.</li> <li><code>docs</code> publishes the documentation to GitHub pages.</li> </ul> </li> <li> <p><code>security.yml</code> has a single job</p> <ul> <li><code>audit</code> checks for security vulnerabilities in code.</li> </ul> </li> </ul>"},{"location":"e-commerce-erd/","title":"E-Commerce ERD (WIP)","text":"<pre><code>erDiagram\n    CUSTOMER ||--o{ ORDER : places\n    ORDER ||--|{ LINE-ITEM : contains\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>"},{"location":"erd/","title":"Ecommerce ERD","text":"<p>A simple ERD for ecommerce </p> <pre><code>erDiagram\nusers {\n UUID id PK\n   DATETIME created_at \n   DATETIME deleted_at \n   NVARCHAR(255) email \n   NVARCHAR(64) first_name \n   DATETIME last_login_at \n   NVARCHAR(64) last_name \n   VARCHAR(256) password \n   VARCHAR(15) phone_number \n   ENUM role \n   DATETIME updated_at \n}\naddresses {\n UUID id PK\n   NVARCHAR(64) city \n   NVARCHAR(64) country \n   DATETIME created_at \n   DATETIME deleted_at \n   NVARCHAR(255) line_1 \n   NVARCHAR(255) line_2 \n   NVARCHAR(64) state \n   DATETIME updated_at \n   UUID user_id \n}\nproducts {\n UUID id PK\n   DATETIME created_at \n   NVARCHAR(3) currency \n   DATETIME deleted_at \n   NVARCHAR(255) description \n   NVARCHAR(255) name \n   DECIMAL(15) price \n   NVARCHAR(64) sku \n   DATETIME updated_at \n}\norders {\n UUID id PK\n   UUID address_id \n   DATETIME created_at \n   UUID customer_id \n   DATETIME deleted_at \n   ENUM status \n   FLOAT total_amount \n   DATETIME updated_at \n}\norder_items {\n UUID id PK\n   DATETIME created_at \n   NVARCHAR(3) currency \n   DATETIME deleted_at \n   DECIMAL(15) discount_amount \n   DECIMAL(15) discount_percentage \n   UUID order_id \n   DECIMAL(15) price \n   UUID product_id \n   INTEGER quantity \n   DATETIME updated_at \n}\nusers 1--0+ addresses : has\nusers 1--0+ orders : has\naddresses 1--0+ orders : has\nproducts 1--0+ order_items : has\norders 1--0+ order_items : has</code></pre>"},{"location":"rationale/","title":"Rationale","text":"<p>I worked with flask as it is required in the assessment title, this is my first time using it!</p> <p>I have been a long time user of Django and FastAPI. So I spent some time selecting the libraries that can work in harmony yet offer a decent developer experience.</p>"},{"location":"rationale/#api-endpoints","title":"API endpoints","text":"<ul> <li> <p>I used flask-restx; it's the only actively maintained flask library with swagger support.</p> <p>Note</p> <p>See the swagger section for explanation on why it is a necessary requirement.</p> </li> <li> <p>The API is versioned, served under <code>/v1/</code>. The API is namespaced under <code>/api/</code>.</p> </li> <li>Operations are grouped in thier respective namespaces. For example, the user operations are under <code>/api/user/</code>. </li> </ul> <p>I used <code>-</code> instead <code>_</code> in the endpoint names as it's the industry standard, for example, <code>/v1/protected/admin-only/</code> instead of <code>/admin_only/</code>.</p> <p>There are three namespaces:</p> <ol> <li><code>user</code>: for user operations, like login, and register.</li> <li><code>protected</code>: for resource (only GET now) that require authentication.</li> <li><code>public</code>: for resources that are open to the public.</li> </ol>"},{"location":"rationale/#swagger","title":"Swagger","text":"<p>Instead of manually documenting the API using Postman. I relied on the auto-generated API documentation using Swagger.</p> <p>This has the following benefits:</p> <ul> <li>Now the code is the single source of truth. Any changes in the code will be reflected in the documentation.</li> <li>We can try out the API directly from the documentation see Running flask dev server for more details.</li> <li>We can generate SDKs for the API in multiple languages. See Generating SDKs for more details.</li> </ul>"},{"location":"swagger/","title":"Swagger","text":"<p>Auto-generated API documentation using Swagger.</p> <p></p>"}]}